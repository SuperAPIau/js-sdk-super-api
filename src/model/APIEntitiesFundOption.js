/**
 * Super API Documentation
 * The Super API makes superannuation fund data easily accessible for developers.  Build the future.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@superapi.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIEntitiesFundOption model module.
 * @module model/APIEntitiesFundOption
 * @version 1.0.0
 */
class APIEntitiesFundOption {
    /**
     * Constructs a new <code>APIEntitiesFundOption</code>.
     * This endpoint enables developers to retrieve a list of the FundOptions available from AustralianSuper.  FundOptions enable an AustralianSuper member to determine (at a high level) the makeup of their superannuation portfolio.  The FundOptions can be utilised with other endpoints to retrieve additional details related to the FundOption, such as the performance of the portfolio over time.
     * @alias module:model/APIEntitiesFundOption
     * @param name {String} Name of the FundOption, utilised as an ID in api routes
     * @param displayName {String} Display friendly name of the FundOption
     */
    constructor(name, displayName) { 
        
        APIEntitiesFundOption.initialize(this, name, displayName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, displayName) { 
        obj['name'] = name;
        obj['display_name'] = displayName;
    }

    /**
     * Constructs a <code>APIEntitiesFundOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIEntitiesFundOption} obj Optional instance to populate.
     * @return {module:model/APIEntitiesFundOption} The populated <code>APIEntitiesFundOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIEntitiesFundOption();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Name of the FundOption, utilised as an ID in api routes
 * @member {String} name
 */
APIEntitiesFundOption.prototype['name'] = undefined;

/**
 * Display friendly name of the FundOption
 * @member {String} display_name
 */
APIEntitiesFundOption.prototype['display_name'] = undefined;






export default APIEntitiesFundOption;


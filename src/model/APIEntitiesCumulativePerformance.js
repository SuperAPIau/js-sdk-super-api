/**
 * Super API Documentation
 * The Super API makes superannuation fund data easily accessible for developers.  Build the future.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@superapi.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIEntitiesCumulativePerformance model module.
 * @module model/APIEntitiesCumulativePerformance
 * @version 1.0.0
 */
class APIEntitiesCumulativePerformance {
    /**
     * Constructs a new <code>APIEntitiesCumulativePerformance</code>.
     * The cumulative performance from the inception of the FundOption.  This represents the growth over time from the inception date of the FundOption to the requested date.
     * @alias module:model/APIEntitiesCumulativePerformance
     * @param report {String} Type of performance report
     * @param growthRate {Number} Growth rate for the performance period
     * @param growthRateType {String} Identifies how the growth rate should be interpreted, ie: as a percentage.  Currently only percentage is used.  Other options may become available in the future.
     * @param startDate {Date} Start date of the cumulative performance period.  This may differ from the requested start date if the requested period is longer than the period for which data exists.  The start_date reflects the requested date, or the earliest date for which data is available.
     * @param endDate {Date} End date of the cumulative performance period.  This may differ from the requested end date if the requested period is longer than the period for which data exists.  The end_date reflects the requested date, or the most recent date for which data is available.
     * @param cumulativeDates {Number} A count of the data points (days) which fall within the cumulative period requested.
     * @param performanceDates {Number} A count of the data points (days) for which there was growth / performance recorded.  Not all fund options are active on all days (ie: stock market closures, weekends, etc).
     * @param nonPerformanceDates {Number} A count of the data points (days) for which there was no growth / performance recorded.  Not all fund options are active on all days (ie: stock market closures, weekends, etc).
     */
    constructor(report, growthRate, growthRateType, startDate, endDate, cumulativeDates, performanceDates, nonPerformanceDates) { 
        
        APIEntitiesCumulativePerformance.initialize(this, report, growthRate, growthRateType, startDate, endDate, cumulativeDates, performanceDates, nonPerformanceDates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, report, growthRate, growthRateType, startDate, endDate, cumulativeDates, performanceDates, nonPerformanceDates) { 
        obj['report'] = report;
        obj['growth_rate'] = growthRate;
        obj['growth_rate_type'] = growthRateType;
        obj['start_date'] = startDate;
        obj['end_date'] = endDate;
        obj['cumulative_dates'] = cumulativeDates;
        obj['performance_dates'] = performanceDates;
        obj['non_performance_dates'] = nonPerformanceDates;
    }

    /**
     * Constructs a <code>APIEntitiesCumulativePerformance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIEntitiesCumulativePerformance} obj Optional instance to populate.
     * @return {module:model/APIEntitiesCumulativePerformance} The populated <code>APIEntitiesCumulativePerformance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIEntitiesCumulativePerformance();

            if (data.hasOwnProperty('report')) {
                obj['report'] = ApiClient.convertToType(data['report'], 'String');
            }
            if (data.hasOwnProperty('growth_rate')) {
                obj['growth_rate'] = ApiClient.convertToType(data['growth_rate'], 'Number');
            }
            if (data.hasOwnProperty('growth_rate_type')) {
                obj['growth_rate_type'] = ApiClient.convertToType(data['growth_rate_type'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('cumulative_dates')) {
                obj['cumulative_dates'] = ApiClient.convertToType(data['cumulative_dates'], 'Number');
            }
            if (data.hasOwnProperty('performance_dates')) {
                obj['performance_dates'] = ApiClient.convertToType(data['performance_dates'], 'Number');
            }
            if (data.hasOwnProperty('non_performance_dates')) {
                obj['non_performance_dates'] = ApiClient.convertToType(data['non_performance_dates'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Type of performance report
 * @member {String} report
 */
APIEntitiesCumulativePerformance.prototype['report'] = undefined;

/**
 * Growth rate for the performance period
 * @member {Number} growth_rate
 */
APIEntitiesCumulativePerformance.prototype['growth_rate'] = undefined;

/**
 * Identifies how the growth rate should be interpreted, ie: as a percentage.  Currently only percentage is used.  Other options may become available in the future.
 * @member {String} growth_rate_type
 */
APIEntitiesCumulativePerformance.prototype['growth_rate_type'] = undefined;

/**
 * Start date of the cumulative performance period.  This may differ from the requested start date if the requested period is longer than the period for which data exists.  The start_date reflects the requested date, or the earliest date for which data is available.
 * @member {Date} start_date
 */
APIEntitiesCumulativePerformance.prototype['start_date'] = undefined;

/**
 * End date of the cumulative performance period.  This may differ from the requested end date if the requested period is longer than the period for which data exists.  The end_date reflects the requested date, or the most recent date for which data is available.
 * @member {Date} end_date
 */
APIEntitiesCumulativePerformance.prototype['end_date'] = undefined;

/**
 * A count of the data points (days) which fall within the cumulative period requested.
 * @member {Number} cumulative_dates
 */
APIEntitiesCumulativePerformance.prototype['cumulative_dates'] = undefined;

/**
 * A count of the data points (days) for which there was growth / performance recorded.  Not all fund options are active on all days (ie: stock market closures, weekends, etc).
 * @member {Number} performance_dates
 */
APIEntitiesCumulativePerformance.prototype['performance_dates'] = undefined;

/**
 * A count of the data points (days) for which there was no growth / performance recorded.  Not all fund options are active on all days (ie: stock market closures, weekends, etc).
 * @member {Number} non_performance_dates
 */
APIEntitiesCumulativePerformance.prototype['non_performance_dates'] = undefined;






export default APIEntitiesCumulativePerformance;


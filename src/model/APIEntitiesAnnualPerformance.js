/**
 * Super API Documentation
 * The Super API makes superannuation fund data easily accessible for developers.  Build the future.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@superapi.com.au
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIEntitiesAnnualPerformance model module.
 * @module model/APIEntitiesAnnualPerformance
 * @version 1.0.0
 */
class APIEntitiesAnnualPerformance {
    /**
     * Constructs a new <code>APIEntitiesAnnualPerformance</code>.
     * The annual performance for a FundOption for a given year.
     * @alias module:model/APIEntitiesAnnualPerformance
     * @param report {String} Type of performance report
     * @param growthRate {Number} Growth rate for the performance period
     * @param growthRateType {String} Identifies how the growth rate should be interpreted, ie: as a percentage.  Currently only percentage is used.  Other options may become available in the future.
     * @param year {Number} Year of the performance period
     */
    constructor(report, growthRate, growthRateType, year) { 
        
        APIEntitiesAnnualPerformance.initialize(this, report, growthRate, growthRateType, year);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, report, growthRate, growthRateType, year) { 
        obj['report'] = report;
        obj['growth_rate'] = growthRate;
        obj['growth_rate_type'] = growthRateType;
        obj['year'] = year;
    }

    /**
     * Constructs a <code>APIEntitiesAnnualPerformance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIEntitiesAnnualPerformance} obj Optional instance to populate.
     * @return {module:model/APIEntitiesAnnualPerformance} The populated <code>APIEntitiesAnnualPerformance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIEntitiesAnnualPerformance();

            if (data.hasOwnProperty('report')) {
                obj['report'] = ApiClient.convertToType(data['report'], 'String');
            }
            if (data.hasOwnProperty('growth_rate')) {
                obj['growth_rate'] = ApiClient.convertToType(data['growth_rate'], 'Number');
            }
            if (data.hasOwnProperty('growth_rate_type')) {
                obj['growth_rate_type'] = ApiClient.convertToType(data['growth_rate_type'], 'String');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Type of performance report
 * @member {String} report
 */
APIEntitiesAnnualPerformance.prototype['report'] = undefined;

/**
 * Growth rate for the performance period
 * @member {Number} growth_rate
 */
APIEntitiesAnnualPerformance.prototype['growth_rate'] = undefined;

/**
 * Identifies how the growth rate should be interpreted, ie: as a percentage.  Currently only percentage is used.  Other options may become available in the future.
 * @member {String} growth_rate_type
 */
APIEntitiesAnnualPerformance.prototype['growth_rate_type'] = undefined;

/**
 * Year of the performance period
 * @member {Number} year
 */
APIEntitiesAnnualPerformance.prototype['year'] = undefined;






export default APIEntitiesAnnualPerformance;

